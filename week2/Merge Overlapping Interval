 vector<vector<int>> merge(vector<vector<int>>& intervals) {
        if (intervals.size() < 2) return intervals;
        vector<vector<int>> ans;
        sort(intervals.begin(), intervals.end(), [](vector<int> a, vector<int> b){return (a[0] < b[0]);});

        ans.push_back(intervals[0]);
        auto curr_interval = intervals[0];
        int curr_interval_idx = 0;
        for(int i = 1; i < intervals.size(); i++) {
            int curr_begin = ans[curr_interval_idx][0];
            int curr_end = ans[curr_interval_idx][1];

            int next_begin = intervals[i][0];
            int next_end = intervals[i][1];

            if(curr_end >= next_begin){
                ans[curr_interval_idx][1] = max(curr_end, next_end);
            }
            else {
                ans.push_back(intervals[i]);
                curr_interval_idx++;
            }
        }
        return ans;
    }
