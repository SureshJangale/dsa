class Solution {
public:
    void dfs(int n, vector<vector<int>> &adj, vector<int> &vis){
        vis[n] = 1;
        for(auto it: adj[n]){
            if(!vis[it])
                dfs(it, adj, vis);
        }
    }
    int findCircleNum(vector<vector<int>>& roads) {
        int n = roads.size();
        vector<vector<int>> adj(n);
        // create adj matrix
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(roads[i][j]==1 &&  i!=j){
                    adj[i].push_back(j);
                }
            }
        }
        vector<int> vis(n, 0);
        int count = 0;
        // dfs
        for(int i = 0; i < n; i++){
            if (!vis[i]) {
                dfs(i, adj, vis);
                count++;
            }
        }
        return count;
    }
};
