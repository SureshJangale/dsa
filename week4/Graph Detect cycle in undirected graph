class Graph {

public:
    bool detectCycle(int V, vector<int> adj[]) {
        int vis[V] = {0};
        for(int i = 0; i < V; i++){
            if(!vis[i]){
                if(dfs(i, -1, adj, vis))return true;
            }
        }
        return false;
    }
    bool dfs(int n, int parent, vector<int> adj[], int vis[]){
        vis[n] = 1;
        for(auto it:adj[n]){
            if (!vis[it]) {
                if(dfs(it, n, adj, vis)) return true;
            } else if (it != parent) {
                return true;
            }
        }
        return false;
    }
};
